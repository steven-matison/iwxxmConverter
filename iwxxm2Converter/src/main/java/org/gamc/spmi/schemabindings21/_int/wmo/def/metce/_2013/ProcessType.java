//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.02.27 at 12:41:52 PM MSK 
//


package schemabindings21._int.wmo.def.metce._2013;

import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;

import schemabindings21.net.opengis.gml.v_3_2_1.AbstractFeatureType;
import schemabindings21.net.opengis.gml.v_3_2_1.CodeType;
import schemabindings21.net.opengis.om._2.NamedValuePropertyType;


/**
 * <p>Java class for ProcessType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ProcessType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.opengis.net/gml/3.2}AbstractFeatureType">
 *       &lt;sequence>
 *         &lt;element name="documentationRef" type="{http://www.opengis.net/gml/3.2}CodeType" minOccurs="0"/>
 *         &lt;element name="parameter" type="{http://www.opengis.net/om/2.0}NamedValuePropertyType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="context" type="{http://def.wmo.int/metce/2013}MeasurementContextPropertyType" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ProcessType", propOrder = {
    "documentationRef",
    "parameter",
    "context"
})
public class ProcessType
    extends AbstractFeatureType
{

    protected CodeType documentationRef;
    protected List<NamedValuePropertyType> parameter;
    protected List<MeasurementContextPropertyType> context;

    /**
     * Gets the value of the documentationRef property.
     * 
     * @return
     *     possible object is
     *     {@link CodeType }
     *     
     */
    public CodeType getDocumentationRef() {
        return documentationRef;
    }

    /**
     * Sets the value of the documentationRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link CodeType }
     *     
     */
    public void setDocumentationRef(CodeType value) {
        this.documentationRef = value;
    }

    public boolean isSetDocumentationRef() {
        return (this.documentationRef!= null);
    }

    /**
     * Gets the value of the parameter property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the parameter property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getParameter().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NamedValuePropertyType }
     * 
     * 
     */
    public List<NamedValuePropertyType> getParameter() {
        if (parameter == null) {
            parameter = new ArrayList<NamedValuePropertyType>();
        }
        return this.parameter;
    }

    public boolean isSetParameter() {
        return ((this.parameter!= null)&&(!this.parameter.isEmpty()));
    }

    public void unsetParameter() {
        this.parameter = null;
    }

    /**
     * Gets the value of the context property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the context property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getContext().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link MeasurementContextPropertyType }
     * 
     * 
     */
    public List<MeasurementContextPropertyType> getContext() {
        if (context == null) {
            context = new ArrayList<MeasurementContextPropertyType>();
        }
        return this.context;
    }

    public boolean isSetContext() {
        return ((this.context!= null)&&(!this.context.isEmpty()));
    }

    public void unsetContext() {
        this.context = null;
    }

}
