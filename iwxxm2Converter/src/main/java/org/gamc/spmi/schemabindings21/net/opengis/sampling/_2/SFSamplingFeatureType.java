//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.02.27 at 12:41:52 PM MSK 
//


package schemabindings21.net.opengis.sampling._2;

import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;

import schemabindings21.net.opengis.gml.v_3_2_1.AbstractFeatureType;
import schemabindings21.net.opengis.gml.v_3_2_1.FeaturePropertyType;
import schemabindings21.net.opengis.gml.v_3_2_1.ReferenceType;
import schemabindings21.net.opengis.om._2.NamedValuePropertyType;
import schemabindings21.net.opengis.om._2.OMObservationPropertyType;
import schemabindings21.net.opengis.samplingspatial._2.SFSpatialSamplingFeatureType;
import schemabindings21.org.isotc211._2005.gmd.LILineagePropertyType;


/**
 * A "SamplingFeature" is a feature used primarily for taking
 * 				observations.
 * 
 * <p>Java class for SF_SamplingFeatureType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="SF_SamplingFeatureType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.opengis.net/gml/3.2}AbstractFeatureType">
 *       &lt;sequence>
 *         &lt;group ref="{http://www.opengis.net/sampling/2.0}SF_CommonProperties"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SF_SamplingFeatureType", propOrder = {
    "type",
    "sampledFeature",
    "lineage",
    "relatedObservation",
    "relatedSamplingFeature",
    "parameter"
})
@XmlSeeAlso({
    SFSpatialSamplingFeatureType.class
})
public class SFSamplingFeatureType
    extends AbstractFeatureType
{

    protected ReferenceType type;
    @XmlElement(required = true, nillable = true)
    protected List<FeaturePropertyType> sampledFeature;
    protected LILineagePropertyType lineage;
    protected List<OMObservationPropertyType> relatedObservation;
    protected List<SamplingFeatureComplexPropertyType> relatedSamplingFeature;
    protected List<NamedValuePropertyType> parameter;

    /**
     * Gets the value of the type property.
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    public ReferenceType getType() {
        return type;
    }

    /**
     * Sets the value of the type property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setType(ReferenceType value) {
        this.type = value;
    }

    public boolean isSetType() {
        return (this.type!= null);
    }

    /**
     * Gets the value of the sampledFeature property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the sampledFeature property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSampledFeature().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link FeaturePropertyType }
     * 
     * 
     */
    public List<FeaturePropertyType> getSampledFeature() {
        if (sampledFeature == null) {
            sampledFeature = new ArrayList<FeaturePropertyType>();
        }
        return this.sampledFeature;
    }

    public boolean isSetSampledFeature() {
        return ((this.sampledFeature!= null)&&(!this.sampledFeature.isEmpty()));
    }

    public void unsetSampledFeature() {
        this.sampledFeature = null;
    }

    /**
     * Gets the value of the lineage property.
     * 
     * @return
     *     possible object is
     *     {@link LILineagePropertyType }
     *     
     */
    public LILineagePropertyType getLineage() {
        return lineage;
    }

    /**
     * Sets the value of the lineage property.
     * 
     * @param value
     *     allowed object is
     *     {@link LILineagePropertyType }
     *     
     */
    public void setLineage(LILineagePropertyType value) {
        this.lineage = value;
    }

    public boolean isSetLineage() {
        return (this.lineage!= null);
    }

    /**
     * Gets the value of the relatedObservation property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the relatedObservation property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRelatedObservation().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link OMObservationPropertyType }
     * 
     * 
     */
    public List<OMObservationPropertyType> getRelatedObservation() {
        if (relatedObservation == null) {
            relatedObservation = new ArrayList<OMObservationPropertyType>();
        }
        return this.relatedObservation;
    }

    public boolean isSetRelatedObservation() {
        return ((this.relatedObservation!= null)&&(!this.relatedObservation.isEmpty()));
    }

    public void unsetRelatedObservation() {
        this.relatedObservation = null;
    }

    /**
     * Gets the value of the relatedSamplingFeature property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the relatedSamplingFeature property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRelatedSamplingFeature().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SamplingFeatureComplexPropertyType }
     * 
     * 
     */
    public List<SamplingFeatureComplexPropertyType> getRelatedSamplingFeature() {
        if (relatedSamplingFeature == null) {
            relatedSamplingFeature = new ArrayList<SamplingFeatureComplexPropertyType>();
        }
        return this.relatedSamplingFeature;
    }

    public boolean isSetRelatedSamplingFeature() {
        return ((this.relatedSamplingFeature!= null)&&(!this.relatedSamplingFeature.isEmpty()));
    }

    public void unsetRelatedSamplingFeature() {
        this.relatedSamplingFeature = null;
    }

    /**
     * Gets the value of the parameter property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the parameter property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getParameter().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NamedValuePropertyType }
     * 
     * 
     */
    public List<NamedValuePropertyType> getParameter() {
        if (parameter == null) {
            parameter = new ArrayList<NamedValuePropertyType>();
        }
        return this.parameter;
    }

    public boolean isSetParameter() {
        return ((this.parameter!= null)&&(!this.parameter.isEmpty()));
    }

    public void unsetParameter() {
        this.parameter = null;
    }

}
